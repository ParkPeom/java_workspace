
인터페이스 : 추상메서드 의 집합 (프로그래밍 관점)
구현된 것이 전혀 없는 설계도 . 껍데기 (모든 멤버가 public)
인터페이스 와 추상클래스 차이점
추상클래스는 추상메서드 , 생성자 , 멤버변수 를 가지고 있다 
인터페이스는 추상메서드만 가지고 있다

인터페이스 - 추상메서드의 집합 

interface 인터페이스이름 {
	public static final 타입 상수이름 = 값; <- 상수 (인상)
	public abstract 메서드이름(매개변수목록); <- 추상메서드(인추) public abstract생략가능 		
}
인터페이스 조상은 인터페이스만 가능(Object가 최고 조상 아님)
다중상속이 가능 (추상메서드는 충돌해도 문제 없음) - 조상이 여러개 

인터페이스의 구현(미완성 설계도 => 완성)
- 인터페이스에 정의된 추상 메서드를 완성하는 것 
	// 인터페이스에 정의된 추상메서드를 모두 구현해야 한다. 
	// implements 구현 
	추상메서드 구현 -> 몸통 완성
	Fighter 클래스는 Fightable 인터페이스를 구현했다. = 추상클래스 완성과 동일하다
	
인터페이스란 ? 추상메서드의 집합 
인터페이스구현이란 ? 인터페이스의 추상메서드 몸통 만들기 (미완성 설계도 완성하기 )
	
 추상클래스와 인터페이스의 공통점은 ?
A. 추상메서드를 가지고 있다(미완성 설계도)
차이점은 ?
인터페이스는 멤버변수,생성자를 가질수없다. - 껍데기다 

